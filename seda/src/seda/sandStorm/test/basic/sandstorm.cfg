# Example Sandstorm configuration file.
#
# The '#' starts a comment which extends to the end of the line
# This file uses an XML-like format consisting of nested sections.
# 
# Most of the sections of this file are optional. The complete set of
# options is given here just to document their use, and leaving options 
# unspecified causes them to use their default values. In general it is
# a good idea to just use the defaults.
#
# Special directives are indicated using <! ... > tags. Presently only
# one special directive is supported: <!include filename> which causes
# the named file to be included. Nested <!include> directives are
# supported. 

# The outermost section in the file must be called 'sandstorm'.
<sandstorm>

  # Global options
  <global>

  # The default thread manager for stages. 
  # Allowable values are 'TPSTM' (thread-per-stage) and 'TPPTM' 
  # (thread-per-CPU). 
  defaultThreadManager TPSTM   

  # Options for thread pool management
  <threadPool>
    # The minimum number of threads allocated to each thread pool.
    minThreads 1
    # The maximum number of threads allocated to each thread pool.
    maxThreads 10
    # The initial number of threads allocated to each thread pool.
    initialThreads 1
    <sizeController>
      # Enable the thread pool sizing controller. This resizes the thread 
      # pool for each stage when the stage's incoming event queue reaches 
      # some threshold.
      enable true
      # The sampling delay (in milliseconds) for the controller.
      delay 2000
      # The threshold above which threads are added to a pool.
      threshold 1000
    </sizeController>
  </threadPool>

  # Options for the asynchronous sockets layer
  <aSocket>
    # Enable the sockets layer; true by default.
    enable true
    # Specify which mechanism to use for nonblocking I/O; set to
    # "NBIO" or "NIO"
    provider NBIO

    <rateController>
      # Enable the packet input rate controller
      enable false
      # Rate in packets/sec that the controller attempts to throttle to
      rate 10000.0
    </rateController>
  </aSocket>

  # Options for the asynchronous disk I/O layer
  <aDisk>
    # Enable the disk I/O layer; false by default.
    enable true
  </aDisk>

  </global>

  # This section contains one subsection for each stage.
  <stages>

    # The name of the stage as registered with the system.
    <TimerStage>

    # The fully-qualified classname of the stage's event handler. Mandatory.
    class TimerHandler

    # The size of the event queue threshold for this stage. Optional.
    # Above this threshold the event queue will reject new entries.
    # The default is -1, which indicates an infinite threshold.
    queueThreshold 1000

    # Initial arguments to pass to the event handler's init() method
    <initargs>
      delay 500 
      next_handler GenStage1
    </initargs>

    </TimerStage>

    # Another stage
    <GenStage1>
    class GenericHandler
    <initargs>
      cpu1 0 
      cpu2 0 
      sleep 100 
      next_handler SinkStage
    </initargs>
    </GenStage1>

    # Another stage
    <SinkStage>
    class DevNullHandler
    </SinkStage>

  </stages>

</sandstorm>  # End of the configuration file

